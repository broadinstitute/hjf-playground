
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/automatic-potato-hjf-ap-service-account/versions/latest
    env: SA_JSON

steps:
  - id: get-access-token
    name: 'us-east4-docker.pkg.dev/automatic-potato-hjf/dev-container/automatic-potato-develop:latest'
    secretEnv: [ 'SA_JSON' ]
    entrypoint: "/bin/bash"
    args: 
      - -c 
      - |
        echo $$SA_JSON > sa2.json
        gcloud --project automatic-potato-hjf secrets versions access latest --secret=automatic-potato-hjf-ap-service-account > sa.json
        gcloud --project automatic-potato-hjf secrets versions access latest --secret=hjfbynara-github-pat > /workspace/token.txt
        gcloud auth activate-service-account --key-file=sa.json
        gcloud auth print-access-token > /workspace/sa.token

  - id: terraform-version
    name: 'us-east4-docker.pkg.dev/automatic-potato-hjf/dev-container/automatic-potato-develop:latest'
    entrypoint: "/bin/bash"
    args: 
      - -c
      - | 
        terraform -chdir=/workspace/${_TOPDIR} version > /workspace/step-version.txt 2>&1 || echo "$?" > /workspace/rc-version.txt
        if [ -e /workspace/rc-version.txt ] ; then
           echo "Version returned error ..."
           cat /workspace/step-version.txt
        fi 

  - id: terraform-fmt
    name: 'us-east4-docker.pkg.dev/automatic-potato-hjf/dev-container/automatic-potato-develop:latest'
    entrypoint: "/bin/bash"
    args: 
      - -c 
      - |
        terraform -chdir=/workspace/${_TOPDIR}  fmt -check -recursive > /workspace/step-fmt.txt 2>&1 || echo "$?" > /workspace/rc-fmt.txt
        if [ -e /workspace/rc-fmt.txt ] ; then
           echo "Fmt returned error ..."
           cat /workspace/step-fmt.txt
        fi 

  - id: terraform-init
    name: 'us-east4-docker.pkg.dev/automatic-potato-hjf/dev-container/automatic-potato-develop:latest'
    entrypoint: "/bin/bash"
    args: 
      - -c
      - | 
        export GOOGLE_OAUTH_ACCESS_TOKEN=$(cat /workspace/sa.token)
        terraform -chdir=/workspace/${_TOPDIR} init > /workspace/step-init.txt 2>&1 || echo "$?" > /workspace/rc-init.txt
        if [ -e /workspace/rc-init.txt ] ; then
           echo "Init returned error ..."
           cat /workspace/step-init.txt
        fi 

  - id: terraform-validate
    name: 'us-east4-docker.pkg.dev/automatic-potato-hjf/dev-container/automatic-potato-develop:latest'
    entrypoint: "/bin/bash"
    args: 
      - -c
      - | 
        export GOOGLE_OAUTH_ACCESS_TOKEN=$(cat /workspace/sa.token)
        terraform -chdir=/workspace/${_TOPDIR} validate > /workspace/step-validate.txt 2>&1 || echo "$?" > /workspace/rc-validate.txt
        if [ -e /workspace/rc-validate.txt ] ; then
           echo "Validate returned error ..."
           cat /workspace/step-validate.txt
        fi 

  - id: terraform-plan
    name: 'us-east4-docker.pkg.dev/automatic-potato-hjf/dev-container/automatic-potato-develop:latest'
    entrypoint: "/bin/bash"
    args: 
      - -c
      - | 
        export GOOGLE_OAUTH_ACCESS_TOKEN=$(cat /workspace/sa.token)
        terraform -chdir=/workspace/${_TOPDIR} plan -no-color -lock=false > /workspace/step-plan.txt 2>&1 || echo "$?" > /workspace/rc-plan.txt
        if [ -e /workspace/rc-plan.txt ] ; then
           echo "Plan returned error ..."
           cat /workspace/step-plan.txt
        fi 

  - id: post-test-results
    name: 'us-east4-docker.pkg.dev/automatic-potato-hjf/dev-container/cloudbuild-github-cli:latest'
    entrypoint: "/bin/bash"
    args:
      - -c
      - |
        > comment.txt
        for stepname in fmt init validate plan
        do
          echo -n "#### Terraform ${stepname}: " >> comment.txt
          if [ -e "/workspace/rc-${stepname}.txt" ] ; then
             echo "Failed" >> comment.txt
             echo  '<details><summary>Show output</summary>' >> comment.txt
             output=$(cat /workspace/step-${stepname}.txt)
             echo "\`\`\`${output}\`\`\`" >> comment.txt
             echo '</details>' >> comment.txt
          else
             echo "Successful" >> comment.txt
          fi 
        done
        /usr/bin/gh.bash pr review $_PR_NUMBER -R broadinstitute/$REPO_NAME -c -b "$(cat comment.txt)"

  - id: job-exit-status
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: "/bin/bash"
    args:
      - -c
      - |
        rc=0
        for rcfile in /workspace/rc-*.txt
        do
          rc=1
          echo "Step: ${rcfile} - exitted with non-zero status: $(cat $rcfile)"
        done
        exit $rc   


artifacts:
  objects:
     location:  'gs://automatic-potato-hjf-cloudbuild-outputs'
     paths: [ 'step*.txt' ]
  
