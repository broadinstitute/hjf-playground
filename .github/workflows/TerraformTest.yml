name: Terraform Test

on:
  pull_request:
    branches: 
      - master
    paths:
      - terraform/**
    
env:
  terraform_directory: "terraform"
  terraform_version: "0.12.13"

jobs:
  terraform_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get-changed-list
      uses: lots0logs/gh-action-get-changed-files@2.0.5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Output change list
      run: |
        echo steps.Get-changed-list.outputs.files

    - name: Create shell env file
      run: |
        env_files=$(find terraform/test -name \*.env -print)
        if [ ! -z "${env_files}" ]
        then
            for file in ${env_files}
            do
              IFS='=' ; cat ${file} | grep -Ev "^#" | while read key value
              do
                 echo "export ${key}=\"${value}\"" >> load.env
              done
            done
        fi

    # Runs a set of commands using the runners shell
    - name: Copy testing tfvars
      run: |
        tfvars=$(find terraform/test -name \*.tfvars -print)
        [ -f load.env ] && . load.env
        env

    # need to add ctmpl render phase

    # Run Terraform fmt (kind of a linter)
    - name: Terraform format check
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'fmt'
        tf_actions_fmt_write: false
        tf_actions_comment: true
        tf_actions_working_dir: ${{ env.terraform_directory }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Run Terraform init 
    - name: Terraform init
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'init'
        tf_actions_comment: true
        tf_actions_working_dir: ${{ env.terraform_directory }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Run Terraform validate 
    - name: Terraform validate
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'validate'
        tf_actions_comment: true
        tf_actions_working_dir: ${{ env.terraform_directory }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Run Terraform plan 
    - name: Terraform plan
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: ${{ env.terraform_version }}
        tf_actions_subcommand: 'plan'
        tf_actions_comment: true
        tf_actions_working_dir: ${{ env.terraform_directory }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

