name: Ctmpl render test

on:
  push:
    branches: 
      - master
    paths:
      - terraform/test/**
    

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Get secret from vault
    - name: vault token
      id: vault
      env:
        ROLE_ID: ${{ secrets.ROLE_ID }}
        SECRET_ID: ${{ secrets.SECRET_ID }}
        VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      run: |
        # get vault token using role-id and secret-id
        VAULT_TOKEN=$(curl \
            --request POST \
            --data "{\"role_id\":\"${ROLE_ID}\",\"secret_id\":\"${SECRET_ID}\"}" \
            ${VAULT_ADDR}/v1/auth/approle/login | jq -r .auth.client_token)
        if [ -z "${VAULT_TOKEN}" ] ; then
           echo "Vault authentication failed!"
           exit 1
        fi
        echo ::add-mask::${VAULT_TOKEN}
        echo ::set-env name=VAULT_TOKEN::${VAULT_TOKEN}
        echo "${VAULT_TOKEN}" > tokenfile

    # make dirs
    - name: prepare directories
      run: | 
        mkdir terraform/output

  render_cmtpls:
    runs-on: ubuntu-latest
    container:
      image: broadinstitute/configurator-base:gomplate
      volumes:
        - ${GITHUB_WORKSPACE}/terraform/test:/configs
        - ${GITHUB_WORKSPACE}/terraform/output:/working
        - ${GITHUB_WORKSPACE}/tokenfile:/root/.vault-token
    steps:
    - name: command
      run: |
        echo "run"
    

