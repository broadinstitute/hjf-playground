# This workflow triggers helm linting on PRs and master branch pushes
# that affect helm files
name: Helm Chart linting V2

on:
  pull_request:
    paths:
      - helm/**

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get chagned files
        uses: lots0logs/gh-action-get-changed-files@2.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Chart list from changed files
        run: |
          jq . < files.json
#          # CHART_LIST=$(git diff-tree --no-commit-id --name-only -r ${{ env.GITHUB_SHA }} | grep -E "^helm" | cut -d '/' -f2 | sort | uniq | grep -Ev "ct.yaml|cr.yaml")
#          # echo ::set-env name=CHART_LIST::${CHART_LIST}
#          # for chart in ${CHART_LIST}
#          # do
#          #    echo "  - helm/${chart}" >> helm/ct.yaml
#          # done

#  lint:
#    runs-on: ubuntu-latest
#    container:
#      image: quay.io/helmpack/chart-testing:v3.0.0-rc.1
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Add all charts to ct.yaml
#        run: |
#          CHART_LIST=$(find helm -type d -maxdepth 1 ! -name "helm" -print)
#          echo ::set-env name=CHART_LIST::${CHART_LIST}
#          for chart in ${CHART_LIST}
#          do
#            echo "  - ${chart}" >> helm/ct.yaml
#          done
#
#        # `ct lint` likes to find charts on its own using git
#        # history.
#      - name: Fetch History
#        run: git fetch --prune --unshallow
#
#        # We keep this around because it does version bump and
#        # maintenance checks outside of what `helm lint` does.
#        # It is separate because this needs to be at the top of
#        # the repo, and it is cleaner to use the
#        # working-directory directive below.
#      - name: Chart Test Basic Lint
#        run: ct lint --config helm/ct.yaml
#
#        # These are each actually run by `ct lint`, but we want
#        # to see their output and set arguments ourselves
#        # (--strict). Because this GitHub Action is infrequently
#        # run, duplicating the checks for the sake of keeping
#        # this Action simple is worth it.
#      - name: Helm Chart Strict Lint
#        env:
#          CHART_LIST: ${{ env.CHART_LIST }}
#        run: |
#          for chart in ${CHART_LIST}
#          do
#              helm lint --strict --namespace default ${chart}
#              yamale --schema /etc/ct/chart_schema.yaml ${chart}/Chart.yaml
#              yamllint --config-file /etc/ct/lintconf.yaml --strict ${chart}/Chart.yaml ${chart}/values.yaml
#          done
#
